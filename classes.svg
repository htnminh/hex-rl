<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 11.0.0 (20240428.1522)
 -->
<!-- Title: classes Pages: 1 -->
<svg width="3413pt" height="3712pt"
 viewBox="0.00 0.00 3412.50 3712.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 3708)">
<title>classes</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-3708 3408.5,-3708 3408.5,4 -4,4"/>
<!-- .T_destination -->
<g id="node1" class="node">
<title>.T_destination</title>
<polygon fill="#99ddff" stroke="#99ddff" points="243.5,-1772.38 243.5,-1819.88 339.75,-1819.88 339.75,-1772.38 243.5,-1772.38"/>
<text text-anchor="start" x="251.5" y="-1802.58" font-family="Times New Roman,serif" font-size="14.00">.T_destination</text>
<polyline fill="none" stroke="#99ddff" points="243.5,-1796.12 339.75,-1796.12"/>
<polyline fill="none" stroke="#99ddff" points="243.5,-1796.12 339.75,-1796.12"/>
<text text-anchor="start" x="289.75" y="-1778.83" font-family="Times New Roman,serif" font-size="14.00"> </text>
</g>
<!-- torch.nn.modules.module.Module -->
<g id="node25" class="node">
<title>torch.nn.modules.module.Module</title>
<polygon fill="#dddddd" stroke="#dddddd" points="0,-1884.5 0,-2711.75 1083.25,-2711.75 1083.25,-1884.5 0,-1884.5"/>
<text text-anchor="start" x="447.12" y="-2694.45" font-family="Times New Roman,serif" font-size="14.00">torch.nn.modules.module.Module</text>
<polyline fill="none" stroke="#dddddd" points="0,-2688 1083.25,-2688"/>
<text text-anchor="start" x="466.62" y="-2670.7" font-family="Times New Roman,serif" font-size="14.00">T_destination</text>
<text text-anchor="start" x="466.62" y="-2654.95" font-family="Times New Roman,serif" font-size="14.00">call_super_init : bool</text>
<text text-anchor="start" x="466.62" y="-2639.2" font-family="Times New Roman,serif" font-size="14.00">dump_patches : bool</text>
<text text-anchor="start" x="466.62" y="-2623.45" font-family="Times New Roman,serif" font-size="14.00">forward : Callable[..., Any]</text>
<text text-anchor="start" x="466.62" y="-2607.7" font-family="Times New Roman,serif" font-size="14.00">training : bool</text>
<polyline fill="none" stroke="#dddddd" points="0,-2601.25 1083.25,-2601.25"/>
<text text-anchor="start" x="8" y="-2583.95" font-family="Times New Roman,serif" font-size="14.00">add_module(name: str, module: Optional[&#39;Module&#39;]): None</text>
<text text-anchor="start" x="8" y="-2568.2" font-family="Times New Roman,serif" font-size="14.00">apply(fn: Callable[[&#39;Module&#39;], None]): T</text>
<text text-anchor="start" x="8" y="-2552.45" font-family="Times New Roman,serif" font-size="14.00">bfloat16(): T</text>
<text text-anchor="start" x="8" y="-2536.7" font-family="Times New Roman,serif" font-size="14.00">buffers(recurse: bool): Iterator[Tensor]</text>
<text text-anchor="start" x="8" y="-2520.95" font-family="Times New Roman,serif" font-size="14.00">children(): Iterator[&#39;Module&#39;]</text>
<text text-anchor="start" x="8" y="-2505.2" font-family="Times New Roman,serif" font-size="14.00">compile()</text>
<text text-anchor="start" x="8" y="-2489.45" font-family="Times New Roman,serif" font-size="14.00">cpu(): T</text>
<text text-anchor="start" x="8" y="-2473.7" font-family="Times New Roman,serif" font-size="14.00">cuda(device: Optional[Union[int, device]]): T</text>
<text text-anchor="start" x="8" y="-2457.95" font-family="Times New Roman,serif" font-size="14.00">double(): T</text>
<text text-anchor="start" x="8" y="-2442.2" font-family="Times New Roman,serif" font-size="14.00">eval(): T</text>
<text text-anchor="start" x="8" y="-2426.45" font-family="Times New Roman,serif" font-size="14.00">extra_repr(): str</text>
<text text-anchor="start" x="8" y="-2410.7" font-family="Times New Roman,serif" font-size="14.00">float(): T</text>
<text text-anchor="start" x="8" y="-2394.95" font-family="Times New Roman,serif" font-size="14.00">get_buffer(target: str): &#39;Tensor&#39;</text>
<text text-anchor="start" x="8" y="-2379.2" font-family="Times New Roman,serif" font-size="14.00">get_extra_state(): Any</text>
<text text-anchor="start" x="8" y="-2363.45" font-family="Times New Roman,serif" font-size="14.00">get_parameter(target: str): &#39;Parameter&#39;</text>
<text text-anchor="start" x="8" y="-2347.7" font-family="Times New Roman,serif" font-size="14.00">get_submodule(target: str): &#39;Module&#39;</text>
<text text-anchor="start" x="8" y="-2331.95" font-family="Times New Roman,serif" font-size="14.00">half(): T</text>
<text text-anchor="start" x="8" y="-2316.2" font-family="Times New Roman,serif" font-size="14.00">ipu(device: Optional[Union[int, device]]): T</text>
<text text-anchor="start" x="8" y="-2300.45" font-family="Times New Roman,serif" font-size="14.00">load_state_dict(state_dict: Mapping[str, Any], strict: bool, assign: bool)</text>
<text text-anchor="start" x="8" y="-2284.7" font-family="Times New Roman,serif" font-size="14.00">modules(): Iterator[&#39;Module&#39;]</text>
<text text-anchor="start" x="8" y="-2268.95" font-family="Times New Roman,serif" font-size="14.00">named_buffers(prefix: str, recurse: bool, remove_duplicate: bool): Iterator[Tuple[str, Tensor]]</text>
<text text-anchor="start" x="8" y="-2253.2" font-family="Times New Roman,serif" font-size="14.00">named_children(): Iterator[Tuple[str, &#39;Module&#39;]]</text>
<text text-anchor="start" x="8" y="-2237.45" font-family="Times New Roman,serif" font-size="14.00">named_modules(memo: Optional[Set[&#39;Module&#39;]], prefix: str, remove_duplicate: bool)</text>
<text text-anchor="start" x="8" y="-2221.7" font-family="Times New Roman,serif" font-size="14.00">named_parameters(prefix: str, recurse: bool, remove_duplicate: bool): Iterator[Tuple[str, Parameter]]</text>
<text text-anchor="start" x="8" y="-2205.95" font-family="Times New Roman,serif" font-size="14.00">parameters(recurse: bool): Iterator[Parameter]</text>
<text text-anchor="start" x="8" y="-2190.2" font-family="Times New Roman,serif" font-size="14.00">register_backward_hook(hook: Callable[[&#39;Module&#39;, _grad_t, _grad_t], Union[None, _grad_t]]): RemovableHandle</text>
<text text-anchor="start" x="8" y="-2174.45" font-family="Times New Roman,serif" font-size="14.00">register_buffer(name: str, tensor: Optional[Tensor], persistent: bool): None</text>
<text text-anchor="start" x="8" y="-2158.7" font-family="Times New Roman,serif" font-size="14.00">register_forward_hook(hook: Union[Callable[[T, Tuple[Any, ...], Any], Optional[Any]], Callable[[T, Tuple[Any, ...], Dict[str, Any], Any], Optional[Any]]]): RemovableHandle</text>
<text text-anchor="start" x="8" y="-2142.95" font-family="Times New Roman,serif" font-size="14.00">register_forward_pre_hook(hook: Union[Callable[[T, Tuple[Any, ...]], Optional[Any]], Callable[[T, Tuple[Any, ...], Dict[str, Any]], Optional[Tuple[Any, Dict[str, Any]]]]]): RemovableHandle</text>
<text text-anchor="start" x="8" y="-2127.2" font-family="Times New Roman,serif" font-size="14.00">register_full_backward_hook(hook: Callable[[&#39;Module&#39;, _grad_t, _grad_t], Union[None, _grad_t]], prepend: bool): RemovableHandle</text>
<text text-anchor="start" x="8" y="-2111.45" font-family="Times New Roman,serif" font-size="14.00">register_full_backward_pre_hook(hook: Callable[[&#39;Module&#39;, _grad_t], Union[None, _grad_t]], prepend: bool): RemovableHandle</text>
<text text-anchor="start" x="8" y="-2095.7" font-family="Times New Roman,serif" font-size="14.00">register_load_state_dict_post_hook(hook)</text>
<text text-anchor="start" x="8" y="-2079.95" font-family="Times New Roman,serif" font-size="14.00">register_module(name: str, module: Optional[&#39;Module&#39;]): None</text>
<text text-anchor="start" x="8" y="-2064.2" font-family="Times New Roman,serif" font-size="14.00">register_parameter(name: str, param: Optional[Parameter]): None</text>
<text text-anchor="start" x="8" y="-2048.45" font-family="Times New Roman,serif" font-size="14.00">register_state_dict_pre_hook(hook)</text>
<text text-anchor="start" x="8" y="-2032.7" font-family="Times New Roman,serif" font-size="14.00">requires_grad_(requires_grad: bool): T</text>
<text text-anchor="start" x="8" y="-2016.95" font-family="Times New Roman,serif" font-size="14.00">set_extra_state(state: Any): None</text>
<text text-anchor="start" x="8" y="-2001.2" font-family="Times New Roman,serif" font-size="14.00">share_memory(): T</text>
<text text-anchor="start" x="8" y="-1985.45" font-family="Times New Roman,serif" font-size="14.00">state_dict(): T_destination</text>
<text text-anchor="start" x="8" y="-1969.7" font-family="Times New Roman,serif" font-size="14.00">to(device: Optional[DeviceLikeType], dtype: Optional[dtype], non_blocking: bool): Self</text>
<text text-anchor="start" x="8" y="-1953.95" font-family="Times New Roman,serif" font-size="14.00">to_empty(): T</text>
<text text-anchor="start" x="8" y="-1938.2" font-family="Times New Roman,serif" font-size="14.00">train(mode: bool): T</text>
<text text-anchor="start" x="8" y="-1922.45" font-family="Times New Roman,serif" font-size="14.00">type(dst_type: Union[dtype, str]): T</text>
<text text-anchor="start" x="8" y="-1906.7" font-family="Times New Roman,serif" font-size="14.00">xpu(device: Optional[Union[int, device]]): T</text>
<text text-anchor="start" x="8" y="-1890.95" font-family="Times New Roman,serif" font-size="14.00">zero_grad(set_to_none: bool): None</text>
</g>
<!-- .T_destination&#45;&gt;torch.nn.modules.module.Module -->
<g id="edge9" class="edge">
<title>.T_destination&#45;&gt;torch.nn.modules.module.Module</title>
<path fill="none" stroke="black" d="M303.18,-1820.24C309.72,-1833.32 318.75,-1851.37 329.47,-1872.82"/>
<polygon fill="black" stroke="black" points="329.46,-1872.8 335.73,-1876.38 334.83,-1883.54 328.57,-1879.96 329.46,-1872.8"/>
<text text-anchor="middle" x="360.88" y="-1852.7" font-family="Times New Roman,serif" font-size="14.00" fill="green">T_destination</text>
</g>
<!-- .ndarray -->
<g id="node2" class="node">
<title>.ndarray</title>
<polygon fill="#99ddff" stroke="#99ddff" points="854.38,-0.5 854.38,-1158.5 1108.88,-1158.5 1108.88,-0.5 854.38,-0.5"/>
<text text-anchor="start" x="958.75" y="-1141.2" font-family="Times New Roman,serif" font-size="14.00">.ndarray</text>
<polyline fill="none" stroke="#99ddff" points="854.38,-1134.75 1108.88,-1134.75"/>
<text text-anchor="start" x="924.62" y="-1117.45" font-family="Times New Roman,serif" font-size="14.00">T : ndarray</text>
<text text-anchor="start" x="924.62" y="-1101.7" font-family="Times New Roman,serif" font-size="14.00">base : NoneType</text>
<text text-anchor="start" x="924.62" y="-1085.95" font-family="Times New Roman,serif" font-size="14.00">ctypes : NoneType</text>
<text text-anchor="start" x="924.62" y="-1070.2" font-family="Times New Roman,serif" font-size="14.00">data : NoneType</text>
<text text-anchor="start" x="924.62" y="-1054.45" font-family="Times New Roman,serif" font-size="14.00">dtype : NoneType</text>
<text text-anchor="start" x="924.62" y="-1038.7" font-family="Times New Roman,serif" font-size="14.00">flags : NoneType</text>
<text text-anchor="start" x="924.62" y="-1022.95" font-family="Times New Roman,serif" font-size="14.00">flat : ndarray</text>
<text text-anchor="start" x="924.62" y="-1007.2" font-family="Times New Roman,serif" font-size="14.00">imag : ndarray</text>
<text text-anchor="start" x="924.62" y="-991.45" font-family="Times New Roman,serif" font-size="14.00">itemsize : NoneType</text>
<text text-anchor="start" x="924.62" y="-975.7" font-family="Times New Roman,serif" font-size="14.00">nbytes : NoneType</text>
<text text-anchor="start" x="924.62" y="-959.95" font-family="Times New Roman,serif" font-size="14.00">ndim : NoneType</text>
<text text-anchor="start" x="924.62" y="-944.2" font-family="Times New Roman,serif" font-size="14.00">real : ndarray</text>
<text text-anchor="start" x="924.62" y="-928.45" font-family="Times New Roman,serif" font-size="14.00">shape : ndarray</text>
<text text-anchor="start" x="924.62" y="-912.7" font-family="Times New Roman,serif" font-size="14.00">size : NoneType</text>
<text text-anchor="start" x="924.62" y="-896.95" font-family="Times New Roman,serif" font-size="14.00">strides : NoneType</text>
<polyline fill="none" stroke="#99ddff" points="854.38,-890.5 1108.88,-890.5"/>
<text text-anchor="start" x="862.38" y="-873.2" font-family="Times New Roman,serif" font-size="14.00">all(axis, out, keepdims)</text>
<text text-anchor="start" x="862.38" y="-857.45" font-family="Times New Roman,serif" font-size="14.00">any(axis, out, keepdims)</text>
<text text-anchor="start" x="862.38" y="-841.7" font-family="Times New Roman,serif" font-size="14.00">argmax(axis, out)</text>
<text text-anchor="start" x="862.38" y="-825.95" font-family="Times New Roman,serif" font-size="14.00">argmin(axis, out)</text>
<text text-anchor="start" x="862.38" y="-810.2" font-family="Times New Roman,serif" font-size="14.00">argpartition(kth, axis, kind, order)</text>
<text text-anchor="start" x="862.38" y="-794.45" font-family="Times New Roman,serif" font-size="14.00">argsort(axis, kind, order)</text>
<text text-anchor="start" x="862.38" y="-778.7" font-family="Times New Roman,serif" font-size="14.00">astype(dtype, order, casting, subok, copy)</text>
<text text-anchor="start" x="862.38" y="-762.95" font-family="Times New Roman,serif" font-size="14.00">byteswap(inplace)</text>
<text text-anchor="start" x="862.38" y="-747.2" font-family="Times New Roman,serif" font-size="14.00">choose(choices, out, mode)</text>
<text text-anchor="start" x="862.38" y="-731.45" font-family="Times New Roman,serif" font-size="14.00">clip(min, max, out)</text>
<text text-anchor="start" x="862.38" y="-715.7" font-family="Times New Roman,serif" font-size="14.00">compress(condition, axis, out)</text>
<text text-anchor="start" x="862.38" y="-699.95" font-family="Times New Roman,serif" font-size="14.00">conj()</text>
<text text-anchor="start" x="862.38" y="-684.2" font-family="Times New Roman,serif" font-size="14.00">conjugate()</text>
<text text-anchor="start" x="862.38" y="-668.45" font-family="Times New Roman,serif" font-size="14.00">copy(order)</text>
<text text-anchor="start" x="862.38" y="-652.7" font-family="Times New Roman,serif" font-size="14.00">cumprod(axis, dtype, out)</text>
<text text-anchor="start" x="862.38" y="-636.95" font-family="Times New Roman,serif" font-size="14.00">cumsum(axis, dtype, out)</text>
<text text-anchor="start" x="862.38" y="-621.2" font-family="Times New Roman,serif" font-size="14.00">diagonal(offset, axis1, axis2)</text>
<text text-anchor="start" x="862.38" y="-605.45" font-family="Times New Roman,serif" font-size="14.00">dot(b, out)</text>
<text text-anchor="start" x="862.38" y="-589.7" font-family="Times New Roman,serif" font-size="14.00">dump(file)</text>
<text text-anchor="start" x="862.38" y="-573.95" font-family="Times New Roman,serif" font-size="14.00">dumps()</text>
<text text-anchor="start" x="862.38" y="-558.2" font-family="Times New Roman,serif" font-size="14.00">fill(value)</text>
<text text-anchor="start" x="862.38" y="-542.45" font-family="Times New Roman,serif" font-size="14.00">flatten(order)</text>
<text text-anchor="start" x="862.38" y="-526.7" font-family="Times New Roman,serif" font-size="14.00">getfield(dtype, offset)</text>
<text text-anchor="start" x="862.38" y="-510.95" font-family="Times New Roman,serif" font-size="14.00">item()</text>
<text text-anchor="start" x="862.38" y="-495.2" font-family="Times New Roman,serif" font-size="14.00">itemset()</text>
<text text-anchor="start" x="862.38" y="-479.45" font-family="Times New Roman,serif" font-size="14.00">max(axis, out)</text>
<text text-anchor="start" x="862.38" y="-463.7" font-family="Times New Roman,serif" font-size="14.00">mean(axis, dtype, out, keepdims)</text>
<text text-anchor="start" x="862.38" y="-447.95" font-family="Times New Roman,serif" font-size="14.00">min(axis, out, keepdims)</text>
<text text-anchor="start" x="862.38" y="-432.2" font-family="Times New Roman,serif" font-size="14.00">newbyteorder(new_order)</text>
<text text-anchor="start" x="862.38" y="-416.45" font-family="Times New Roman,serif" font-size="14.00">nonzero()</text>
<text text-anchor="start" x="862.38" y="-400.7" font-family="Times New Roman,serif" font-size="14.00">partition(kth, axis, kind, order)</text>
<text text-anchor="start" x="862.38" y="-384.95" font-family="Times New Roman,serif" font-size="14.00">prod(axis, dtype, out, keepdims)</text>
<text text-anchor="start" x="862.38" y="-369.2" font-family="Times New Roman,serif" font-size="14.00">ptp(axis, out)</text>
<text text-anchor="start" x="862.38" y="-353.45" font-family="Times New Roman,serif" font-size="14.00">put(indices, values, mode)</text>
<text text-anchor="start" x="862.38" y="-337.7" font-family="Times New Roman,serif" font-size="14.00">ravel(order)</text>
<text text-anchor="start" x="862.38" y="-321.95" font-family="Times New Roman,serif" font-size="14.00">repeat(repeats, axis)</text>
<text text-anchor="start" x="862.38" y="-306.2" font-family="Times New Roman,serif" font-size="14.00">reshape(shape, order)</text>
<text text-anchor="start" x="862.38" y="-290.45" font-family="Times New Roman,serif" font-size="14.00">resize(new_shape, refcheck)</text>
<text text-anchor="start" x="862.38" y="-274.7" font-family="Times New Roman,serif" font-size="14.00">round(decimals, out)</text>
<text text-anchor="start" x="862.38" y="-258.95" font-family="Times New Roman,serif" font-size="14.00">searchsorted(v, side, sorter)</text>
<text text-anchor="start" x="862.38" y="-243.2" font-family="Times New Roman,serif" font-size="14.00">setfield(val, dtype, offset)</text>
<text text-anchor="start" x="862.38" y="-227.45" font-family="Times New Roman,serif" font-size="14.00">setflags(write, align, uic)</text>
<text text-anchor="start" x="862.38" y="-211.7" font-family="Times New Roman,serif" font-size="14.00">sort(axis, kind, order)</text>
<text text-anchor="start" x="862.38" y="-195.95" font-family="Times New Roman,serif" font-size="14.00">squeeze(axis)</text>
<text text-anchor="start" x="862.38" y="-180.2" font-family="Times New Roman,serif" font-size="14.00">std(axis, dtype, out, ddof, keepdims)</text>
<text text-anchor="start" x="862.38" y="-164.45" font-family="Times New Roman,serif" font-size="14.00">sum(axis, dtype, out, keepdims)</text>
<text text-anchor="start" x="862.38" y="-148.7" font-family="Times New Roman,serif" font-size="14.00">swapaxes(axis1, axis2)</text>
<text text-anchor="start" x="862.38" y="-132.95" font-family="Times New Roman,serif" font-size="14.00">take(indices, axis, out, mode)</text>
<text text-anchor="start" x="862.38" y="-117.2" font-family="Times New Roman,serif" font-size="14.00">tobytes(order)</text>
<text text-anchor="start" x="862.38" y="-101.45" font-family="Times New Roman,serif" font-size="14.00">tofile(fid, sep, format)</text>
<text text-anchor="start" x="862.38" y="-85.7" font-family="Times New Roman,serif" font-size="14.00">tolist()</text>
<text text-anchor="start" x="862.38" y="-69.95" font-family="Times New Roman,serif" font-size="14.00">tostring(order)</text>
<text text-anchor="start" x="862.38" y="-54.2" font-family="Times New Roman,serif" font-size="14.00">trace(offset, axis1, axis2, dtype, out)</text>
<text text-anchor="start" x="862.38" y="-38.45" font-family="Times New Roman,serif" font-size="14.00">transpose()</text>
<text text-anchor="start" x="862.38" y="-22.7" font-family="Times New Roman,serif" font-size="14.00">var(axis, dtype, out, ddof, keepdims)</text>
<text text-anchor="start" x="862.38" y="-6.95" font-family="Times New Roman,serif" font-size="14.00">view(dtype, type)</text>
</g>
<!-- hex_rl.hex.Hex -->
<g id="node5" class="node">
<title>hex_rl.hex.Hex</title>
<polygon fill="#77aadd" stroke="#77aadd" points="839,-1211.25 839,-1707.75 1124.25,-1707.75 1124.25,-1211.25 839,-1211.25"/>
<text text-anchor="start" x="939.62" y="-1690.45" font-family="Times New Roman,serif" font-size="14.00">hex_rl.hex.Hex</text>
<polyline fill="none" stroke="#77aadd" points="839,-1684 1124.25,-1684"/>
<text text-anchor="start" x="903.25" y="-1666.7" font-family="Times New Roman,serif" font-size="14.00">LOWER_SIZE_LIMIT : int</text>
<text text-anchor="start" x="903.25" y="-1650.95" font-family="Times New Roman,serif" font-size="14.00">UPPER_SIZE_LIMIT : int</text>
<text text-anchor="start" x="903.25" y="-1635.2" font-family="Times New Roman,serif" font-size="14.00">board</text>
<text text-anchor="start" x="903.25" y="-1619.45" font-family="Times New Roman,serif" font-size="14.00">inversed : bool</text>
<text text-anchor="start" x="903.25" y="-1603.7" font-family="Times New Roman,serif" font-size="14.00">player : int</text>
<text text-anchor="start" x="903.25" y="-1587.95" font-family="Times New Roman,serif" font-size="14.00">rich_exceptions : bool</text>
<text text-anchor="start" x="903.25" y="-1572.2" font-family="Times New Roman,serif" font-size="14.00">size : int</text>
<text text-anchor="start" x="903.25" y="-1556.45" font-family="Times New Roman,serif" font-size="14.00">winner : NoneType, int</text>
<polyline fill="none" stroke="#77aadd" points="839,-1550 1124.25,-1550"/>
<text text-anchor="start" x="847" y="-1532.7" font-family="Times New Roman,serif" font-size="14.00">check_winner(): Optional[int]</text>
<text text-anchor="start" x="847" y="-1516.95" font-family="Times New Roman,serif" font-size="14.00">get_char_player(): str</text>
<text text-anchor="start" x="847" y="-1501.2" font-family="Times New Roman,serif" font-size="14.00">get_char_winner(): str</text>
<text text-anchor="start" x="847" y="-1485.45" font-family="Times New Roman,serif" font-size="14.00">get_color_player(): str</text>
<text text-anchor="start" x="847" y="-1469.7" font-family="Times New Roman,serif" font-size="14.00">get_color_winner(): str</text>
<text text-anchor="start" x="847" y="-1453.95" font-family="Times New Roman,serif" font-size="14.00">get_rich_char_player(): str</text>
<text text-anchor="start" x="847" y="-1438.2" font-family="Times New Roman,serif" font-size="14.00">get_rich_char_winner(): str</text>
<text text-anchor="start" x="847" y="-1422.45" font-family="Times New Roman,serif" font-size="14.00">get_rich_color_player(): str</text>
<text text-anchor="start" x="847" y="-1406.7" font-family="Times New Roman,serif" font-size="14.00">get_rich_color_winner(): str</text>
<text text-anchor="start" x="847" y="-1390.95" font-family="Times New Roman,serif" font-size="14.00">get_rich_str(): str</text>
<text text-anchor="start" x="847" y="-1375.2" font-family="Times New Roman,serif" font-size="14.00">get_winner_group(): Optional[set[tuple[int, int]]]</text>
<text text-anchor="start" x="847" y="-1359.45" font-family="Times New Roman,serif" font-size="14.00">init_board(): np.ndarray</text>
<text text-anchor="start" x="847" y="-1343.7" font-family="Times New Roman,serif" font-size="14.00">inverse(): None</text>
<text text-anchor="start" x="847" y="-1327.95" font-family="Times New Roman,serif" font-size="14.00">is_valid_action(tup_action: tuple[int, int]): bool</text>
<text text-anchor="start" x="847" y="-1312.2" font-family="Times New Roman,serif" font-size="14.00">play(tup_action: tuple[int, int]): None</text>
<text text-anchor="start" x="847" y="-1296.45" font-family="Times New Roman,serif" font-size="14.00">player_int_to_char(player: int): str</text>
<text text-anchor="start" x="847" y="-1280.7" font-family="Times New Roman,serif" font-size="14.00">player_int_to_color(player: int): str</text>
<text text-anchor="start" x="847" y="-1264.95" font-family="Times New Roman,serif" font-size="14.00">player_int_to_rich_char(player: int): str</text>
<text text-anchor="start" x="847" y="-1249.2" font-family="Times New Roman,serif" font-size="14.00">player_int_to_rich_color(player: int): str</text>
<text text-anchor="start" x="847" y="-1233.45" font-family="Times New Roman,serif" font-size="14.00">reset(): None</text>
<text text-anchor="start" x="847" y="-1217.7" font-family="Times New Roman,serif" font-size="14.00">rich_print(): None</text>
</g>
<!-- .ndarray&#45;&gt;hex_rl.hex.Hex -->
<g id="edge10" class="edge">
<title>.ndarray&#45;&gt;hex_rl.hex.Hex</title>
<path fill="none" stroke="black" d="M981.62,-1158.8C981.62,-1172.16 981.62,-1185.33 981.62,-1198.26"/>
<polygon fill="black" stroke="black" points="981.63,-1198.19 985.63,-1204.19 981.63,-1210.19 977.63,-1204.19 981.63,-1198.19"/>
<text text-anchor="middle" x="998.12" y="-1179.45" font-family="Times New Roman,serif" font-size="14.00" fill="green">board</text>
</g>
<!-- gymnasium.core.Env -->
<g id="node3" class="node">
<title>gymnasium.core.Env</title>
<polygon fill="#44bb99" stroke="#44bb99" points="2200.75,-2827.5 2200.75,-3063.25 2670.5,-3063.25 2670.5,-2827.5 2200.75,-2827.5"/>
<text text-anchor="start" x="2377.12" y="-3045.95" font-family="Times New Roman,serif" font-size="14.00">gymnasium.core.Env</text>
<polyline fill="none" stroke="#44bb99" points="2200.75,-3039.5 2670.5,-3039.5"/>
<text text-anchor="start" x="2308.5" y="-3022.2" font-family="Times New Roman,serif" font-size="14.00">action_space : spaces.Space[ActType]</text>
<text text-anchor="start" x="2308.5" y="-3006.45" font-family="Times New Roman,serif" font-size="14.00">metadata : dict[str, Any]</text>
<text text-anchor="start" x="2308.5" y="-2990.7" font-family="Times New Roman,serif" font-size="14.00">np_random</text>
<text text-anchor="start" x="2308.5" y="-2974.95" font-family="Times New Roman,serif" font-size="14.00">observation_space : spaces.Space[ObsType]</text>
<text text-anchor="start" x="2308.5" y="-2959.2" font-family="Times New Roman,serif" font-size="14.00">render_mode : str | None</text>
<text text-anchor="start" x="2308.5" y="-2943.45" font-family="Times New Roman,serif" font-size="14.00">reward_range : tuple</text>
<text text-anchor="start" x="2308.5" y="-2927.7" font-family="Times New Roman,serif" font-size="14.00">spec : EnvSpec | None</text>
<text text-anchor="start" x="2308.5" y="-2911.95" font-family="Times New Roman,serif" font-size="14.00">unwrapped</text>
<polyline fill="none" stroke="#44bb99" points="2200.75,-2905.5 2670.5,-2905.5"/>
<text text-anchor="start" x="2208.75" y="-2889.2" font-family="Times New Roman,serif" font-style="italic" font-size="14.00">close</text>
<text text-anchor="start" x="2236.5" y="-2889.2" font-family="Times New Roman,serif" font-size="14.00">()</text>
<text text-anchor="start" x="2208.75" y="-2875.2" font-family="Times New Roman,serif" font-size="14.00">get_wrapper_attr(name: str): Any</text>
<text text-anchor="start" x="2208.75" y="-2861.2" font-family="Times New Roman,serif" font-style="italic" font-size="14.00">render</text>
<text text-anchor="start" x="2246.25" y="-2861.2" font-family="Times New Roman,serif" font-size="14.00">(): RenderFrame | list[RenderFrame] | None</text>
<text text-anchor="start" x="2208.75" y="-2847.2" font-family="Times New Roman,serif" font-size="14.00">reset(): tuple[ObsType, dict[str, Any]]</text>
<text text-anchor="start" x="2208.75" y="-2833.2" font-family="Times New Roman,serif" font-style="italic" font-size="14.00">step</text>
<text text-anchor="start" x="2231.25" y="-2833.2" font-family="Times New Roman,serif" font-size="14.00">(action: ActType): tuple[ObsType, SupportsFloat, bool, bool, dict[str, Any]]</text>
</g>
<!-- gymnasium.spaces.space.Space -->
<g id="node4" class="node">
<title>gymnasium.spaces.space.Space</title>
<polygon fill="#bbcc33" stroke="#bbcc33" points="207.25,-1373.12 207.25,-1545.88 512,-1545.88 512,-1373.12 207.25,-1373.12"/>
<text text-anchor="start" x="270" y="-1528.58" font-family="Times New Roman,serif" font-size="14.00">gymnasium.spaces.space.Space</text>
<polyline fill="none" stroke="#bbcc33" points="207.25,-1522.12 512,-1522.12"/>
<text text-anchor="start" x="289.5" y="-1504.83" font-family="Times New Roman,serif" font-size="14.00">dtype : NoneType, dtype</text>
<text text-anchor="start" x="289.5" y="-1489.08" font-family="Times New Roman,serif" font-size="14.00">is_np_flattenable</text>
<text text-anchor="start" x="289.5" y="-1473.33" font-family="Times New Roman,serif" font-size="14.00">np_random</text>
<text text-anchor="start" x="289.5" y="-1457.58" font-family="Times New Roman,serif" font-size="14.00">shape</text>
<polyline fill="none" stroke="#bbcc33" points="207.25,-1451.12 512,-1451.12"/>
<text text-anchor="start" x="215.25" y="-1434.83" font-family="Times New Roman,serif" font-style="italic" font-size="14.00">contains</text>
<text text-anchor="start" x="263.25" y="-1434.83" font-family="Times New Roman,serif" font-size="14.00">(x: Any): bool</text>
<text text-anchor="start" x="215.25" y="-1420.83" font-family="Times New Roman,serif" font-size="14.00">from_jsonable(sample_n: list[Any]): list[T_cov]</text>
<text text-anchor="start" x="215.25" y="-1406.83" font-family="Times New Roman,serif" font-style="italic" font-size="14.00">sample</text>
<text text-anchor="start" x="255.75" y="-1406.83" font-family="Times New Roman,serif" font-size="14.00">(mask: Any | None): T_cov</text>
<text text-anchor="start" x="215.25" y="-1392.83" font-family="Times New Roman,serif" font-size="14.00">seed(seed: int | None): list[int]</text>
<text text-anchor="start" x="215.25" y="-1378.83" font-family="Times New Roman,serif" font-size="14.00">to_jsonable(sample_n: Sequence[T_cov]): list[Any]</text>
</g>
<!-- stable_baselines3.common.torch_layers.BaseFeaturesExtractor -->
<g id="node21" class="node">
<title>stable_baselines3.common.torch_layers.BaseFeaturesExtractor</title>
<polygon fill="#eedd88" stroke="#eedd88" points="357.38,-1760.5 357.38,-1831.75 725.88,-1831.75 725.88,-1760.5 357.38,-1760.5"/>
<text text-anchor="start" x="365.38" y="-1814.45" font-family="Times New Roman,serif" font-size="14.00">stable_baselines3.common.torch_layers.BaseFeaturesExtractor</text>
<polyline fill="none" stroke="#eedd88" points="357.38,-1808 725.88,-1808"/>
<text text-anchor="start" x="505.62" y="-1790.7" font-family="Times New Roman,serif" font-size="14.00">features_dim</text>
<polyline fill="none" stroke="#eedd88" points="357.38,-1784.25 725.88,-1784.25"/>
<text text-anchor="start" x="539.75" y="-1766.95" font-family="Times New Roman,serif" font-size="14.00"> </text>
</g>
<!-- gymnasium.spaces.space.Space&#45;&gt;stable_baselines3.common.torch_layers.BaseFeaturesExtractor -->
<g id="edge18" class="edge">
<title>gymnasium.spaces.space.Space&#45;&gt;stable_baselines3.common.torch_layers.BaseFeaturesExtractor</title>
<path fill="none" stroke="black" d="M366.36,-1546.24C375.04,-1606.68 394.86,-1686.43 440.12,-1742 442.97,-1745.5 446.12,-1748.79 449.48,-1751.9"/>
<polygon fill="none" stroke="black" points="449.51,-1751.92 456.68,-1752.65 458.77,-1759.55 451.59,-1758.82 449.51,-1751.92"/>
<text text-anchor="middle" x="496.88" y="-1728.7" font-family="Times New Roman,serif" font-size="14.00" fill="green">_observation_space</text>
</g>
<!-- hex_rl.hex.InvalidActionError -->
<g id="node6" class="node">
<title>hex_rl.hex.InvalidActionError</title>
<polygon fill="#77aadd" stroke="#77aadd" points="1126.75,-555.75 1126.75,-603.25 1308.5,-603.25 1308.5,-555.75 1126.75,-555.75"/>
<text text-anchor="start" x="1134.75" y="-585.95" font-family="Times New Roman,serif" font-size="14.00" fill="red">hex_rl.hex.InvalidActionError</text>
<polyline fill="none" stroke="#77aadd" points="1126.75,-579.5 1308.5,-579.5"/>
<polyline fill="none" stroke="#77aadd" points="1126.75,-579.5 1308.5,-579.5"/>
<text text-anchor="start" x="1215.75" y="-562.2" font-family="Times New Roman,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- hex_rl.hex.InvalidSizeError -->
<g id="node7" class="node">
<title>hex_rl.hex.InvalidSizeError</title>
<polygon fill="#77aadd" stroke="#77aadd" points="1326.88,-555.75 1326.88,-603.25 1494.38,-603.25 1494.38,-555.75 1326.88,-555.75"/>
<text text-anchor="start" x="1334.88" y="-585.95" font-family="Times New Roman,serif" font-size="14.00" fill="red">hex_rl.hex.InvalidSizeError</text>
<polyline fill="none" stroke="#77aadd" points="1326.88,-579.5 1494.38,-579.5"/>
<polyline fill="none" stroke="#77aadd" points="1326.88,-579.5 1494.38,-579.5"/>
<text text-anchor="start" x="1408.75" y="-562.2" font-family="Times New Roman,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- hex_rl.hex.TerminatedError -->
<g id="node8" class="node">
<title>hex_rl.hex.TerminatedError</title>
<polygon fill="#77aadd" stroke="#77aadd" points="1512.75,-555.75 1512.75,-603.25 1682.5,-603.25 1682.5,-555.75 1512.75,-555.75"/>
<text text-anchor="start" x="1520.75" y="-585.95" font-family="Times New Roman,serif" font-size="14.00" fill="red">hex_rl.hex.TerminatedError</text>
<polyline fill="none" stroke="#77aadd" points="1512.75,-579.5 1682.5,-579.5"/>
<polyline fill="none" stroke="#77aadd" points="1512.75,-579.5 1682.5,-579.5"/>
<text text-anchor="start" x="1595.75" y="-562.2" font-family="Times New Roman,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- hex_rl.hex_cli_api.HexCLI -->
<g id="node9" class="node">
<title>hex_rl.hex_cli_api.HexCLI</title>
<polygon fill="#77aadd" stroke="#77aadd" points="1700.5,-547.88 1700.5,-611.12 1940.75,-611.12 1940.75,-547.88 1700.5,-547.88"/>
<text text-anchor="start" x="1745.25" y="-593.83" font-family="Times New Roman,serif" font-size="14.00">hex_rl.hex_cli_api.HexCLI</text>
<polyline fill="none" stroke="#77aadd" points="1700.5,-587.38 1940.75,-587.38"/>
<polyline fill="none" stroke="#77aadd" points="1700.5,-587.38 1940.75,-587.38"/>
<text text-anchor="start" x="1708.5" y="-570.08" font-family="Times New Roman,serif" font-size="14.00">play_pvp_cli(debug): int</text>
<text text-anchor="start" x="1708.5" y="-554.33" font-family="Times New Roman,serif" font-size="14.00">print_prompt_and_play(): Tuple[int, int]</text>
</g>
<!-- hex_rl.model_dqn.CustomCNN -->
<g id="node10" class="node">
<title>hex_rl.model_dqn.CustomCNN</title>
<polygon fill="#77aadd" stroke="#77aadd" points="530,-1423.88 530,-1495.12 725.25,-1495.12 725.25,-1423.88 530,-1423.88"/>
<text text-anchor="start" x="538" y="-1477.83" font-family="Times New Roman,serif" font-size="14.00">hex_rl.model_dqn.CustomCNN</text>
<polyline fill="none" stroke="#77aadd" points="530,-1471.38 725.25,-1471.38"/>
<text text-anchor="start" x="617.5" y="-1454.08" font-family="Times New Roman,serif" font-size="14.00">cnn</text>
<polyline fill="none" stroke="#77aadd" points="530,-1447.62 725.25,-1447.62"/>
<text text-anchor="start" x="565.38" y="-1430.33" font-family="Times New Roman,serif" font-size="14.00">forward(observations)</text>
</g>
<!-- hex_rl.model_dqn.CustomCNN&#45;&gt;stable_baselines3.common.torch_layers.BaseFeaturesExtractor -->
<g id="edge1" class="edge">
<title>hex_rl.model_dqn.CustomCNN&#45;&gt;stable_baselines3.common.torch_layers.BaseFeaturesExtractor</title>
<path fill="none" stroke="black" d="M618.66,-1495.36C603.04,-1556.17 570.8,-1681.6 553.39,-1749.33"/>
<polygon fill="none" stroke="black" points="550.11,-1748.07 551.01,-1758.62 556.89,-1749.81 550.11,-1748.07"/>
</g>
<!-- hex_rl.model_dqn.DQNModel -->
<g id="node11" class="node">
<title>hex_rl.model_dqn.DQNModel</title>
<polygon fill="#77aadd" stroke="#77aadd" points="1818.75,-2854.62 1818.75,-3036.12 2006.5,-3036.12 2006.5,-2854.62 1818.75,-2854.62"/>
<text text-anchor="start" x="1826.75" y="-3018.82" font-family="Times New Roman,serif" font-size="14.00">hex_rl.model_dqn.DQNModel</text>
<polyline fill="none" stroke="#77aadd" points="1818.75,-3012.38 2006.5,-3012.38"/>
<text text-anchor="start" x="1895.38" y="-2995.07" font-family="Times New Roman,serif" font-size="14.00">env</text>
<text text-anchor="start" x="1895.38" y="-2979.32" font-family="Times New Roman,serif" font-size="14.00">model</text>
<polyline fill="none" stroke="#77aadd" points="1818.75,-2972.88 2006.5,-2972.88"/>
<text text-anchor="start" x="1835.75" y="-2955.57" font-family="Times New Roman,serif" font-size="14.00">load(path): None</text>
<text text-anchor="start" x="1835.75" y="-2939.82" font-family="Times New Roman,serif" font-size="14.00">predict(board)</text>
<text text-anchor="start" x="1835.75" y="-2924.07" font-family="Times New Roman,serif" font-size="14.00">predict_action(obs)</text>
<text text-anchor="start" x="1835.75" y="-2908.32" font-family="Times New Roman,serif" font-size="14.00">predict_inverse(board)</text>
<text text-anchor="start" x="1835.75" y="-2892.57" font-family="Times New Roman,serif" font-size="14.00">predict_q(obs)</text>
<text text-anchor="start" x="1835.75" y="-2876.82" font-family="Times New Roman,serif" font-size="14.00">save(path): None</text>
<text text-anchor="start" x="1835.75" y="-2861.07" font-family="Times New Roman,serif" font-size="14.00">train(total_timesteps): None</text>
</g>
<!-- hex_rl.model_dqn.HexEnv -->
<g id="node12" class="node">
<title>hex_rl.model_dqn.HexEnv</title>
<polygon fill="#77aadd" stroke="#77aadd" points="2329,-2223.12 2329,-2373.12 2542.25,-2373.12 2542.25,-2223.12 2329,-2223.12"/>
<text text-anchor="start" x="2360.62" y="-2355.82" font-family="Times New Roman,serif" font-size="14.00">hex_rl.model_dqn.HexEnv</text>
<polyline fill="none" stroke="#77aadd" points="2329,-2349.38 2542.25,-2349.38"/>
<text text-anchor="start" x="2337" y="-2332.07" font-family="Times New Roman,serif" font-size="14.00">action_space : Discrete</text>
<text text-anchor="start" x="2337" y="-2316.32" font-family="Times New Roman,serif" font-size="14.00">dqn_model : Optional[DQNModel]</text>
<text text-anchor="start" x="2337" y="-2300.57" font-family="Times New Roman,serif" font-size="14.00">hex</text>
<text text-anchor="start" x="2337" y="-2284.82" font-family="Times New Roman,serif" font-size="14.00">observation_space : Box</text>
<polyline fill="none" stroke="#77aadd" points="2329,-2278.38 2542.25,-2278.38"/>
<text text-anchor="start" x="2379.38" y="-2261.07" font-family="Times New Roman,serif" font-size="14.00">render(mode)</text>
<text text-anchor="start" x="2379.38" y="-2245.32" font-family="Times New Roman,serif" font-size="14.00">reset(seed)</text>
<text text-anchor="start" x="2379.38" y="-2229.57" font-family="Times New Roman,serif" font-size="14.00">step(action, inverse)</text>
</g>
<!-- hex_rl.model_dqn.HexEnv&#45;&gt;gymnasium.core.Env -->
<g id="edge2" class="edge">
<title>hex_rl.model_dqn.HexEnv&#45;&gt;gymnasium.core.Env</title>
<path fill="none" stroke="black" d="M2435.62,-2373.46C2435.62,-2481.49 2435.62,-2683.4 2435.62,-2815.85"/>
<polygon fill="none" stroke="black" points="2432.13,-2815.74 2435.63,-2825.74 2439.13,-2815.74 2432.13,-2815.74"/>
</g>
<!-- hex_rl.model_dqn.HexEnv&#45;&gt;hex_rl.model_dqn.DQNModel -->
<g id="edge11" class="edge">
<title>hex_rl.model_dqn.HexEnv&#45;&gt;hex_rl.model_dqn.DQNModel</title>
<path fill="none" stroke="black" d="M2433.91,-2373.33C2427.94,-2464 2404.84,-2617.06 2319.62,-2712.25 2278.7,-2757.97 2246.08,-2735.72 2191.62,-2764 2131.89,-2795.03 2068.64,-2835.25 2017.49,-2869.84"/>
<polygon fill="black" stroke="black" points="2017.44,-2869.87 2014.72,-2876.55 2007.51,-2876.62 2010.23,-2869.94 2017.44,-2869.87"/>
<text text-anchor="middle" x="2307.38" y="-2732.7" font-family="Times New Roman,serif" font-size="14.00" fill="green">env</text>
</g>
<!-- hex_rl.model_random.RandomModel -->
<g id="node13" class="node">
<title>hex_rl.model_random.RandomModel</title>
<polygon fill="#77aadd" stroke="#77aadd" points="1959.25,-555.75 1959.25,-603.25 2186,-603.25 2186,-555.75 1959.25,-555.75"/>
<text text-anchor="start" x="1967.25" y="-585.95" font-family="Times New Roman,serif" font-size="14.00">hex_rl.model_random.RandomModel</text>
<polyline fill="none" stroke="#77aadd" points="1959.25,-579.5 2186,-579.5"/>
<polyline fill="none" stroke="#77aadd" points="1959.25,-579.5 2186,-579.5"/>
<text text-anchor="start" x="2003.62" y="-562.2" font-family="Times New Roman,serif" font-size="14.00">predict(board, info: dict)</text>
</g>
<!-- hex_rl.pyg_button.Button -->
<g id="node14" class="node">
<title>hex_rl.pyg_button.Button</title>
<polygon fill="#77aadd" stroke="#77aadd" points="2329.12,-1305.75 2329.12,-1613.25 2516.12,-1613.25 2516.12,-1305.75 2329.12,-1305.75"/>
<text text-anchor="start" x="2350.62" y="-1595.95" font-family="Times New Roman,serif" font-size="14.00">hex_rl.pyg_button.Button</text>
<polyline fill="none" stroke="#77aadd" points="2329.12,-1589.5 2516.12,-1589.5"/>
<text text-anchor="start" x="2337.12" y="-1572.2" font-family="Times New Roman,serif" font-size="14.00">colour : Tuple[int, int, int]</text>
<text text-anchor="start" x="2337.12" y="-1556.45" font-family="Times New Roman,serif" font-size="14.00">font</text>
<text text-anchor="start" x="2337.12" y="-1540.7" font-family="Times New Roman,serif" font-size="14.00">font_size : int</text>
<text text-anchor="start" x="2337.12" y="-1524.95" font-family="Times New Roman,serif" font-size="14.00">highlight_colour</text>
<text text-anchor="start" x="2337.12" y="-1509.2" font-family="Times New Roman,serif" font-size="14.00">highlight_offset : int</text>
<text text-anchor="start" x="2337.12" y="-1493.45" font-family="Times New Roman,serif" font-size="14.00">highlight_tick : int</text>
<text text-anchor="start" x="2337.12" y="-1477.7" font-family="Times New Roman,serif" font-size="14.00">max_highlight_ticks : int</text>
<text text-anchor="start" x="2337.12" y="-1461.95" font-family="Times New Roman,serif" font-size="14.00">text : str</text>
<text text-anchor="start" x="2337.12" y="-1446.2" font-family="Times New Roman,serif" font-size="14.00">text_colour : Tuple[int, int, int]</text>
<text text-anchor="start" x="2337.12" y="-1430.45" font-family="Times New Roman,serif" font-size="14.00">text_rect</text>
<text text-anchor="start" x="2337.12" y="-1414.7" font-family="Times New Roman,serif" font-size="14.00">text_render</text>
<text text-anchor="start" x="2337.12" y="-1398.95" font-family="Times New Roman,serif" font-size="14.00">x : float</text>
<text text-anchor="start" x="2337.12" y="-1383.2" font-family="Times New Roman,serif" font-size="14.00">y : float</text>
<polyline fill="none" stroke="#77aadd" points="2329.12,-1376.75 2516.12,-1376.75"/>
<text text-anchor="start" x="2355.12" y="-1359.45" font-family="Times New Roman,serif" font-size="14.00">is_collide(mouse_pos)</text>
<text text-anchor="start" x="2355.12" y="-1343.7" font-family="Times New Roman,serif" font-size="14.00">render(screen)</text>
<text text-anchor="start" x="2355.12" y="-1327.95" font-family="Times New Roman,serif" font-size="14.00">render_highlight(): None</text>
<text text-anchor="start" x="2355.12" y="-1312.2" font-family="Times New Roman,serif" font-size="14.00">update()</text>
</g>
<!-- hex_rl.pyg_button.TextButton -->
<g id="node15" class="node">
<title>hex_rl.pyg_button.TextButton</title>
<polygon fill="#77aadd" stroke="#77aadd" points="2204.5,-536 2204.5,-623 2402.75,-623 2402.75,-536 2204.5,-536"/>
<text text-anchor="start" x="2218.88" y="-605.7" font-family="Times New Roman,serif" font-size="14.00">hex_rl.pyg_button.TextButton</text>
<polyline fill="none" stroke="#77aadd" points="2204.5,-599.25 2402.75,-599.25"/>
<text text-anchor="start" x="2258.62" y="-581.95" font-family="Times New Roman,serif" font-size="14.00">highlight_colour</text>
<text text-anchor="start" x="2258.62" y="-566.2" font-family="Times New Roman,serif" font-size="14.00">text : str</text>
<polyline fill="none" stroke="#77aadd" points="2204.5,-559.75 2402.75,-559.75"/>
<text text-anchor="start" x="2212.5" y="-542.45" font-family="Times New Roman,serif" font-size="14.00">update_text(new_text: str): None</text>
</g>
<!-- hex_rl.pyg_button.TextButton&#45;&gt;hex_rl.pyg_button.Button -->
<g id="edge3" class="edge">
<title>hex_rl.pyg_button.TextButton&#45;&gt;hex_rl.pyg_button.Button</title>
<path fill="none" stroke="black" d="M2309.45,-623.44C2325.71,-743.46 2372.29,-1087.13 2400.37,-1294.28"/>
<polygon fill="none" stroke="black" points="2396.88,-1294.63 2401.69,-1304.07 2403.82,-1293.69 2396.88,-1294.63"/>
</g>
<!-- hex_rl.pyg_hexagon.HexagonTile -->
<g id="node16" class="node">
<title>hex_rl.pyg_hexagon.HexagonTile</title>
<polygon fill="#77aadd" stroke="#77aadd" points="2680.75,-402.12 2680.75,-756.88 3090.5,-756.88 3090.5,-402.12 2680.75,-402.12"/>
<text text-anchor="start" x="2791.88" y="-739.58" font-family="Times New Roman,serif" font-size="14.00">hex_rl.pyg_hexagon.HexagonTile</text>
<polyline fill="none" stroke="#77aadd" points="2680.75,-733.12 3090.5,-733.12"/>
<text text-anchor="start" x="2808.75" y="-715.83" font-family="Times New Roman,serif" font-size="14.00">centre</text>
<text text-anchor="start" x="2808.75" y="-700.08" font-family="Times New Roman,serif" font-size="14.00">colour : Tuple[int, ...]</text>
<text text-anchor="start" x="2808.75" y="-684.33" font-family="Times New Roman,serif" font-size="14.00">highlight_colour</text>
<text text-anchor="start" x="2808.75" y="-668.58" font-family="Times New Roman,serif" font-size="14.00">highlight_offset : int</text>
<text text-anchor="start" x="2808.75" y="-652.83" font-family="Times New Roman,serif" font-size="14.00">highlight_tick : int</text>
<text text-anchor="start" x="2808.75" y="-637.08" font-family="Times New Roman,serif" font-size="14.00">max_highlight_ticks : int</text>
<text text-anchor="start" x="2808.75" y="-621.33" font-family="Times New Roman,serif" font-size="14.00">minimal_radius</text>
<text text-anchor="start" x="2808.75" y="-605.58" font-family="Times New Roman,serif" font-size="14.00">player : NoneType</text>
<text text-anchor="start" x="2808.75" y="-589.83" font-family="Times New Roman,serif" font-size="14.00">position : Tuple[float, float]</text>
<text text-anchor="start" x="2808.75" y="-574.08" font-family="Times New Roman,serif" font-size="14.00">radius : float</text>
<text text-anchor="start" x="2808.75" y="-558.33" font-family="Times New Roman,serif" font-size="14.00">vertices : list</text>
<polyline fill="none" stroke="#77aadd" points="2680.75,-551.88 3090.5,-551.88"/>
<text text-anchor="start" x="2688.75" y="-534.58" font-family="Times New Roman,serif" font-size="14.00">collide_with_point(point: Tuple[float, float]): bool</text>
<text text-anchor="start" x="2688.75" y="-518.83" font-family="Times New Roman,serif" font-size="14.00">compute_neighbours(hexagons: List[HexagonTile]): List[HexagonTile]</text>
<text text-anchor="start" x="2688.75" y="-503.07" font-family="Times New Roman,serif" font-size="14.00">compute_vertices(): List[Tuple[float, float]]</text>
<text text-anchor="start" x="2688.75" y="-487.32" font-family="Times New Roman,serif" font-size="14.00">is_neighbour(hexagon: HexagonTile): bool</text>
<text text-anchor="start" x="2688.75" y="-471.57" font-family="Times New Roman,serif" font-size="14.00">mark_winner_group(screen): None</text>
<text text-anchor="start" x="2688.75" y="-455.82" font-family="Times New Roman,serif" font-size="14.00">play(player): None</text>
<text text-anchor="start" x="2688.75" y="-440.07" font-family="Times New Roman,serif" font-size="14.00">render(screen): None</text>
<text text-anchor="start" x="2688.75" y="-424.32" font-family="Times New Roman,serif" font-size="14.00">render_highlight(): None</text>
<text text-anchor="start" x="2688.75" y="-408.57" font-family="Times New Roman,serif" font-size="14.00">update()</text>
</g>
<!-- hex_rl.pyg_hexagrid.HexagonGrid -->
<g id="node17" class="node">
<title>hex_rl.pyg_hexagrid.HexagonGrid</title>
<polygon fill="#77aadd" stroke="#77aadd" points="3108.75,-417.88 3108.75,-741.12 3404.5,-741.12 3404.5,-417.88 3108.75,-417.88"/>
<text text-anchor="start" x="3160.25" y="-723.83" font-family="Times New Roman,serif" font-size="14.00">hex_rl.pyg_hexagrid.HexagonGrid</text>
<polyline fill="none" stroke="#77aadd" points="3108.75,-717.38 3404.5,-717.38"/>
<text text-anchor="start" x="3187.62" y="-700.08" font-family="Times New Roman,serif" font-size="14.00">agent_1 : Optional[str]</text>
<text text-anchor="start" x="3187.62" y="-684.33" font-family="Times New Roman,serif" font-size="14.00">agent_2 : Optional[str]</text>
<text text-anchor="start" x="3187.62" y="-668.58" font-family="Times New Roman,serif" font-size="14.00">caption : str</text>
<text text-anchor="start" x="3187.62" y="-652.83" font-family="Times New Roman,serif" font-size="14.00">color_edge_width : int</text>
<text text-anchor="start" x="3187.62" y="-637.08" font-family="Times New Roman,serif" font-size="14.00">colour : tuple</text>
<text text-anchor="start" x="3187.62" y="-621.33" font-family="Times New Roman,serif" font-size="14.00">init_position : tuple</text>
<text text-anchor="start" x="3187.62" y="-605.58" font-family="Times New Roman,serif" font-size="14.00">mode : Optional[str]</text>
<text text-anchor="start" x="3187.62" y="-589.83" font-family="Times New Roman,serif" font-size="14.00">radius : int</text>
<text text-anchor="start" x="3187.62" y="-574.08" font-family="Times New Roman,serif" font-size="14.00">screen_fill_colour : tuple</text>
<text text-anchor="start" x="3187.62" y="-558.33" font-family="Times New Roman,serif" font-size="14.00">screen_size : tuple</text>
<text text-anchor="start" x="3187.62" y="-542.58" font-family="Times New Roman,serif" font-size="14.00">size : Optional[int]</text>
<polyline fill="none" stroke="#77aadd" points="3108.75,-536.12 3404.5,-536.12"/>
<text text-anchor="start" x="3116.75" y="-518.83" font-family="Times New Roman,serif" font-size="14.00">init_buttons(text): List[Button]</text>
<text text-anchor="start" x="3116.75" y="-503.07" font-family="Times New Roman,serif" font-size="14.00">init_hexagons(): List[List[HexagonTile]]</text>
<text text-anchor="start" x="3116.75" y="-487.32" font-family="Times New Roman,serif" font-size="14.00">init_info_text(text)</text>
<text text-anchor="start" x="3116.75" y="-471.57" font-family="Times New Roman,serif" font-size="14.00">main()</text>
<text text-anchor="start" x="3116.75" y="-455.82" font-family="Times New Roman,serif" font-size="14.00">render_buttons(screen, buttons)</text>
<text text-anchor="start" x="3116.75" y="-440.07" font-family="Times New Roman,serif" font-size="14.00">render_hexagrid(screen, hexagons, winner_group)</text>
<text text-anchor="start" x="3116.75" y="-424.32" font-family="Times New Roman,serif" font-size="14.00">render_info_text(screen, info_text)</text>
</g>
<!-- pygame.ftfont.Font -->
<g id="node18" class="node">
<title>pygame.ftfont.Font</title>
<polygon fill="#aaaa00" stroke="#aaaa00" points="2420.38,-362.75 2420.38,-796.25 2662.88,-796.25 2662.88,-362.75 2420.38,-362.75"/>
<text text-anchor="start" x="2487.62" y="-778.95" font-family="Times New Roman,serif" font-size="14.00">pygame.ftfont.Font</text>
<polyline fill="none" stroke="#aaaa00" points="2420.38,-772.5 2662.88,-772.5"/>
<text text-anchor="start" x="2465.12" y="-755.2" font-family="Times New Roman,serif" font-size="14.00">antialiased</text>
<text text-anchor="start" x="2465.12" y="-739.45" font-family="Times New Roman,serif" font-size="14.00">bold</text>
<text text-anchor="start" x="2465.12" y="-723.7" font-family="Times New Roman,serif" font-size="14.00">italic</text>
<text text-anchor="start" x="2465.12" y="-707.95" font-family="Times New Roman,serif" font-size="14.00">kerning : bool</text>
<text text-anchor="start" x="2465.12" y="-692.2" font-family="Times New Roman,serif" font-size="14.00">oblique</text>
<text text-anchor="start" x="2465.12" y="-676.45" font-family="Times New Roman,serif" font-size="14.00">origin : bool</text>
<text text-anchor="start" x="2465.12" y="-660.7" font-family="Times New Roman,serif" font-size="14.00">pad : bool</text>
<text text-anchor="start" x="2465.12" y="-644.95" font-family="Times New Roman,serif" font-size="14.00">strength : float</text>
<text text-anchor="start" x="2465.12" y="-629.2" font-family="Times New Roman,serif" font-size="14.00">ucs4 : bool</text>
<text text-anchor="start" x="2465.12" y="-613.45" font-family="Times New Roman,serif" font-size="14.00">underline</text>
<text text-anchor="start" x="2465.12" y="-597.7" font-family="Times New Roman,serif" font-size="14.00">underline_adjustment : float</text>
<text text-anchor="start" x="2465.12" y="-581.95" font-family="Times New Roman,serif" font-size="14.00">wide</text>
<polyline fill="none" stroke="#aaaa00" points="2420.38,-575.5 2662.88,-575.5"/>
<text text-anchor="start" x="2428.38" y="-558.2" font-family="Times New Roman,serif" font-size="14.00">get_ascent()</text>
<text text-anchor="start" x="2428.38" y="-542.45" font-family="Times New Roman,serif" font-size="14.00">get_bold()</text>
<text text-anchor="start" x="2428.38" y="-526.7" font-family="Times New Roman,serif" font-size="14.00">get_descent()</text>
<text text-anchor="start" x="2428.38" y="-510.95" font-family="Times New Roman,serif" font-size="14.00">get_height()</text>
<text text-anchor="start" x="2428.38" y="-495.2" font-family="Times New Roman,serif" font-size="14.00">get_italic()</text>
<text text-anchor="start" x="2428.38" y="-479.45" font-family="Times New Roman,serif" font-size="14.00">get_linesize()</text>
<text text-anchor="start" x="2428.38" y="-463.7" font-family="Times New Roman,serif" font-size="14.00">get_underline()</text>
<text text-anchor="start" x="2428.38" y="-447.95" font-family="Times New Roman,serif" font-size="14.00">metrics(text)</text>
<text text-anchor="start" x="2428.38" y="-432.2" font-family="Times New Roman,serif" font-size="14.00">render(text, antialias, color, background)</text>
<text text-anchor="start" x="2428.38" y="-416.45" font-family="Times New Roman,serif" font-size="14.00">set_bold(value)</text>
<text text-anchor="start" x="2428.38" y="-400.7" font-family="Times New Roman,serif" font-size="14.00">set_italic(value)</text>
<text text-anchor="start" x="2428.38" y="-384.95" font-family="Times New Roman,serif" font-size="14.00">set_underline(value)</text>
<text text-anchor="start" x="2428.38" y="-369.2" font-family="Times New Roman,serif" font-size="14.00">size(text)</text>
</g>
<!-- pygame.ftfont.Font&#45;&gt;hex_rl.pyg_button.Button -->
<g id="edge12" class="edge">
<title>pygame.ftfont.Font&#45;&gt;hex_rl.pyg_button.Button</title>
<path fill="none" stroke="black" d="M2512.32,-796.69C2491.56,-949.85 2464.13,-1152.26 2445.09,-1292.72"/>
<polygon fill="black" stroke="black" points="2445.13,-1292.48 2448.28,-1298.96 2443.51,-1304.37 2440.36,-1297.89 2445.13,-1292.48"/>
<text text-anchor="middle" x="2469.88" y="-1179.45" font-family="Times New Roman,serif" font-size="14.00" fill="green">font</text>
</g>
<!-- stable_baselines3.common.base_class.BaseAlgorithm -->
<g id="node19" class="node">
<title>stable_baselines3.common.base_class.BaseAlgorithm</title>
<polygon fill="#eedd88" stroke="#eedd88" points="611.38,-3163.25 611.38,-3703.5 1831.88,-3703.5 1831.88,-3163.25 611.38,-3163.25"/>
<text text-anchor="start" x="1071.25" y="-3686.2" font-family="Times New Roman,serif" font-size="14.00">stable_baselines3.common.base_class.BaseAlgorithm</text>
<polyline fill="none" stroke="#eedd88" points="611.38,-3679.75 1831.88,-3679.75"/>
<text text-anchor="start" x="1070.12" y="-3662.45" font-family="Times New Roman,serif" font-size="14.00">action_noise : Optional[ActionNoise]</text>
<text text-anchor="start" x="1070.12" y="-3646.7" font-family="Times New Roman,serif" font-size="14.00">action_space</text>
<text text-anchor="start" x="1070.12" y="-3630.95" font-family="Times New Roman,serif" font-size="14.00">device : device</text>
<text text-anchor="start" x="1070.12" y="-3615.2" font-family="Times New Roman,serif" font-size="14.00">env : Optional[VecEnv], Union</text>
<text text-anchor="start" x="1070.12" y="-3599.45" font-family="Times New Roman,serif" font-size="14.00">ep_info_buffer : NoneType, deque</text>
<text text-anchor="start" x="1070.12" y="-3583.7" font-family="Times New Roman,serif" font-size="14.00">ep_success_buffer : NoneType, deque</text>
<text text-anchor="start" x="1070.12" y="-3567.95" font-family="Times New Roman,serif" font-size="14.00">learning_rate : Union[float, Schedule]</text>
<text text-anchor="start" x="1070.12" y="-3552.2" font-family="Times New Roman,serif" font-size="14.00">logger</text>
<text text-anchor="start" x="1070.12" y="-3536.45" font-family="Times New Roman,serif" font-size="14.00">lr_schedule : Callable</text>
<text text-anchor="start" x="1070.12" y="-3520.7" font-family="Times New Roman,serif" font-size="14.00">n_envs : int</text>
<text text-anchor="start" x="1070.12" y="-3504.95" font-family="Times New Roman,serif" font-size="14.00">num_timesteps : int</text>
<text text-anchor="start" x="1070.12" y="-3489.2" font-family="Times New Roman,serif" font-size="14.00">observation_space</text>
<text text-anchor="start" x="1070.12" y="-3473.45" font-family="Times New Roman,serif" font-size="14.00">policy : BasePolicy</text>
<text text-anchor="start" x="1070.12" y="-3457.7" font-family="Times New Roman,serif" font-size="14.00">policy_aliases : ClassVar[Dict[str, Type[BasePolicy]]]</text>
<text text-anchor="start" x="1070.12" y="-3441.95" font-family="Times New Roman,serif" font-size="14.00">policy_class</text>
<text text-anchor="start" x="1070.12" y="-3426.2" font-family="Times New Roman,serif" font-size="14.00">policy_kwargs : NoneType, dict</text>
<text text-anchor="start" x="1070.12" y="-3410.45" font-family="Times New Roman,serif" font-size="14.00">sde_sample_freq : int</text>
<text text-anchor="start" x="1070.12" y="-3394.7" font-family="Times New Roman,serif" font-size="14.00">seed : Optional[int]</text>
<text text-anchor="start" x="1070.12" y="-3378.95" font-family="Times New Roman,serif" font-size="14.00">start_time : float</text>
<text text-anchor="start" x="1070.12" y="-3363.2" font-family="Times New Roman,serif" font-size="14.00">tensorboard_log : Optional[str]</text>
<text text-anchor="start" x="1070.12" y="-3347.45" font-family="Times New Roman,serif" font-size="14.00">use_sde : bool</text>
<text text-anchor="start" x="1070.12" y="-3331.7" font-family="Times New Roman,serif" font-size="14.00">verbose : int</text>
<polyline fill="none" stroke="#eedd88" points="611.38,-3325.25 1831.88,-3325.25"/>
<text text-anchor="start" x="619.38" y="-3308.95" font-family="Times New Roman,serif" font-size="14.00">get_env(): Optional[VecEnv]</text>
<text text-anchor="start" x="619.38" y="-3294.95" font-family="Times New Roman,serif" font-size="14.00">get_parameters(): Dict[str, Dict]</text>
<text text-anchor="start" x="619.38" y="-3280.95" font-family="Times New Roman,serif" font-size="14.00">get_vec_normalize_env(): Optional[VecNormalize]</text>
<text text-anchor="start" x="619.38" y="-3266.95" font-family="Times New Roman,serif" font-style="italic" font-size="14.00">learn</text>
<text text-anchor="start" x="649.38" y="-3266.95" font-family="Times New Roman,serif" font-size="14.00">(total_timesteps: int, callback: MaybeCallback, log_interval: int, tb_log_name: str, reset_num_timesteps: bool, progress_bar: bool): SelfBaseAlgorithm</text>
<text text-anchor="start" x="619.38" y="-3252.95" font-family="Times New Roman,serif" font-size="14.00">load(path: Union[str, pathlib.Path, io.BufferedIOBase], env: Optional[GymEnv], device: Union[th.device, str], custom_objects: Optional[Dict[str, Any]], print_system_info: bool, force_reset: bool): SelfBaseAlgorithm</text>
<text text-anchor="start" x="619.38" y="-3238.95" font-family="Times New Roman,serif" font-size="14.00">predict(observation: Union[np.ndarray, Dict[str, np.ndarray]], state: Optional[Tuple[np.ndarray, ...]], episode_start: Optional[np.ndarray], deterministic: bool): Tuple[np.ndarray, Optional[Tuple[np.ndarray, ...]]]</text>
<text text-anchor="start" x="619.38" y="-3224.95" font-family="Times New Roman,serif" font-size="14.00">save(path: Union[str, pathlib.Path, io.BufferedIOBase], exclude: Optional[Iterable[str]], include: Optional[Iterable[str]]): None</text>
<text text-anchor="start" x="619.38" y="-3210.95" font-family="Times New Roman,serif" font-size="14.00">set_env(env: GymEnv, force_reset: bool): None</text>
<text text-anchor="start" x="619.38" y="-3196.95" font-family="Times New Roman,serif" font-size="14.00">set_logger(logger: Logger): None</text>
<text text-anchor="start" x="619.38" y="-3182.95" font-family="Times New Roman,serif" font-size="14.00">set_parameters(load_path_or_dict: Union[str, TensorDict], exact_match: bool, device: Union[th.device, str]): None</text>
<text text-anchor="start" x="619.38" y="-3168.95" font-family="Times New Roman,serif" font-size="14.00">set_random_seed(seed: Optional[int]): None</text>
</g>
<!-- stable_baselines3.common.off_policy_algorithm.OffPolicyAlgorithm -->
<g id="node20" class="node">
<title>stable_baselines3.common.off_policy_algorithm.OffPolicyAlgorithm</title>
<polygon fill="#eedd88" stroke="#eedd88" points="642.12,-2764.5 642.12,-3126.25 1801.12,-3126.25 1801.12,-2764.5 642.12,-2764.5"/>
<text text-anchor="start" x="1028.88" y="-3108.95" font-family="Times New Roman,serif" font-size="14.00">stable_baselines3.common.off_policy_algorithm.OffPolicyAlgorithm</text>
<polyline fill="none" stroke="#eedd88" points="642.12,-3102.5 1801.12,-3102.5"/>
<text text-anchor="start" x="1024" y="-3085.2" font-family="Times New Roman,serif" font-size="14.00">action_noise : Optional[ActionNoise], VectorizedActionNoise</text>
<text text-anchor="start" x="1024" y="-3069.45" font-family="Times New Roman,serif" font-size="14.00">actor</text>
<text text-anchor="start" x="1024" y="-3053.7" font-family="Times New Roman,serif" font-size="14.00">batch_size : int</text>
<text text-anchor="start" x="1024" y="-3037.95" font-family="Times New Roman,serif" font-size="14.00">buffer_size : int</text>
<text text-anchor="start" x="1024" y="-3022.2" font-family="Times New Roman,serif" font-size="14.00">gamma : float</text>
<text text-anchor="start" x="1024" y="-3006.45" font-family="Times New Roman,serif" font-size="14.00">gradient_steps : int</text>
<text text-anchor="start" x="1024" y="-2990.7" font-family="Times New Roman,serif" font-size="14.00">learning_starts : int</text>
<text text-anchor="start" x="1024" y="-2974.95" font-family="Times New Roman,serif" font-size="14.00">num_timesteps</text>
<text text-anchor="start" x="1024" y="-2959.2" font-family="Times New Roman,serif" font-size="14.00">optimize_memory_usage : bool</text>
<text text-anchor="start" x="1024" y="-2943.45" font-family="Times New Roman,serif" font-size="14.00">policy</text>
<text text-anchor="start" x="1024" y="-2927.7" font-family="Times New Roman,serif" font-size="14.00">replay_buffer : DictReplayBuffer, Optional[ReplayBuffer]</text>
<text text-anchor="start" x="1024" y="-2911.95" font-family="Times New Roman,serif" font-size="14.00">replay_buffer_class : DictReplayBuffer, Optional[Type[ReplayBuffer]]</text>
<text text-anchor="start" x="1024" y="-2896.2" font-family="Times New Roman,serif" font-size="14.00">replay_buffer_kwargs : dict</text>
<text text-anchor="start" x="1024" y="-2880.45" font-family="Times New Roman,serif" font-size="14.00">tau : float</text>
<text text-anchor="start" x="1024" y="-2864.7" font-family="Times New Roman,serif" font-size="14.00">train_freq : TrainFreq, Union[int, Tuple[int, str]]</text>
<text text-anchor="start" x="1024" y="-2848.95" font-family="Times New Roman,serif" font-size="14.00">use_sde_at_warmup : bool</text>
<polyline fill="none" stroke="#eedd88" points="642.12,-2842.5 1801.12,-2842.5"/>
<text text-anchor="start" x="650.12" y="-2826.2" font-family="Times New Roman,serif" font-size="14.00">collect_rollouts(env: VecEnv, callback: BaseCallback, train_freq: TrainFreq, replay_buffer: ReplayBuffer, action_noise: Optional[ActionNoise], learning_starts: int, log_interval: Optional[int]): RolloutReturn</text>
<text text-anchor="start" x="650.12" y="-2812.2" font-family="Times New Roman,serif" font-size="14.00">learn(total_timesteps: int, callback: MaybeCallback, log_interval: int, tb_log_name: str, reset_num_timesteps: bool, progress_bar: bool): SelfOffPolicyAlgorithm</text>
<text text-anchor="start" x="650.12" y="-2798.2" font-family="Times New Roman,serif" font-size="14.00">load_replay_buffer(path: Union[str, pathlib.Path, io.BufferedIOBase], truncate_last_traj: bool): None</text>
<text text-anchor="start" x="650.12" y="-2784.2" font-family="Times New Roman,serif" font-size="14.00">save_replay_buffer(path: Union[str, pathlib.Path, io.BufferedIOBase]): None</text>
<text text-anchor="start" x="650.12" y="-2770.2" font-family="Times New Roman,serif" font-style="italic" font-size="14.00">train</text>
<text text-anchor="start" x="677.88" y="-2770.2" font-family="Times New Roman,serif" font-size="14.00">(gradient_steps: int, batch_size: int): None</text>
</g>
<!-- stable_baselines3.common.off_policy_algorithm.OffPolicyAlgorithm&#45;&gt;stable_baselines3.common.base_class.BaseAlgorithm -->
<g id="edge4" class="edge">
<title>stable_baselines3.common.off_policy_algorithm.OffPolicyAlgorithm&#45;&gt;stable_baselines3.common.base_class.BaseAlgorithm</title>
<path fill="none" stroke="black" d="M1221.62,-3126.65C1221.62,-3134.82 1221.62,-3143.1 1221.62,-3151.43"/>
<polygon fill="none" stroke="black" points="1218.13,-3151.32 1221.63,-3161.32 1225.13,-3151.32 1218.13,-3151.32"/>
</g>
<!-- stable_baselines3.common.torch_layers.BaseFeaturesExtractor&#45;&gt;torch.nn.modules.module.Module -->
<g id="edge5" class="edge">
<title>stable_baselines3.common.torch_layers.BaseFeaturesExtractor&#45;&gt;torch.nn.modules.module.Module</title>
<path fill="none" stroke="black" d="M541.62,-1831.89C541.62,-1843.4 541.62,-1857.38 541.62,-1873.2"/>
<polygon fill="none" stroke="black" points="538.13,-1872.92 541.63,-1882.92 545.13,-1872.92 538.13,-1872.92"/>
</g>
<!-- stable_baselines3.dqn.dqn.DQN -->
<g id="node22" class="node">
<title>stable_baselines3.dqn.dqn.DQN</title>
<polygon fill="#ee8866" stroke="#ee8866" points="1124.62,-2152.25 1124.62,-2444 2310.62,-2444 2310.62,-2152.25 1124.62,-2152.25"/>
<text text-anchor="start" x="1626.88" y="-2426.7" font-family="Times New Roman,serif" font-size="14.00">stable_baselines3.dqn.dqn.DQN</text>
<polyline fill="none" stroke="#ee8866" points="1124.62,-2420.25 2310.62,-2420.25"/>
<text text-anchor="start" x="1566.12" y="-2402.95" font-family="Times New Roman,serif" font-size="14.00">batch_norm_stats</text>
<text text-anchor="start" x="1566.12" y="-2387.2" font-family="Times New Roman,serif" font-size="14.00">batch_norm_stats_target</text>
<text text-anchor="start" x="1566.12" y="-2371.45" font-family="Times New Roman,serif" font-size="14.00">exploration_final_eps : float</text>
<text text-anchor="start" x="1566.12" y="-2355.7" font-family="Times New Roman,serif" font-size="14.00">exploration_fraction : float</text>
<text text-anchor="start" x="1566.12" y="-2339.95" font-family="Times New Roman,serif" font-size="14.00">exploration_initial_eps : float</text>
<text text-anchor="start" x="1566.12" y="-2324.2" font-family="Times New Roman,serif" font-size="14.00">exploration_rate : float</text>
<text text-anchor="start" x="1566.12" y="-2308.45" font-family="Times New Roman,serif" font-size="14.00">exploration_schedule : Callable</text>
<text text-anchor="start" x="1566.12" y="-2292.7" font-family="Times New Roman,serif" font-size="14.00">max_grad_norm : float</text>
<text text-anchor="start" x="1566.12" y="-2276.95" font-family="Times New Roman,serif" font-size="14.00">policy : DQNPolicy</text>
<text text-anchor="start" x="1566.12" y="-2261.2" font-family="Times New Roman,serif" font-size="14.00">policy_aliases : ClassVar[Dict[str, Type[BasePolicy]]]</text>
<text text-anchor="start" x="1566.12" y="-2245.45" font-family="Times New Roman,serif" font-size="14.00">q_net : QNetwork</text>
<text text-anchor="start" x="1566.12" y="-2229.7" font-family="Times New Roman,serif" font-size="14.00">q_net_target : QNetwork</text>
<text text-anchor="start" x="1566.12" y="-2213.95" font-family="Times New Roman,serif" font-size="14.00">target_update_interval : int</text>
<polyline fill="none" stroke="#ee8866" points="1124.62,-2207.5 2310.62,-2207.5"/>
<text text-anchor="start" x="1132.62" y="-2190.2" font-family="Times New Roman,serif" font-size="14.00">learn(total_timesteps: int, callback: MaybeCallback, log_interval: int, tb_log_name: str, reset_num_timesteps: bool, progress_bar: bool): SelfDQN</text>
<text text-anchor="start" x="1132.62" y="-2174.45" font-family="Times New Roman,serif" font-size="14.00">predict(observation: Union[np.ndarray, Dict[str, np.ndarray]], state: Optional[Tuple[np.ndarray, ...]], episode_start: Optional[np.ndarray], deterministic: bool): Tuple[np.ndarray, Optional[Tuple[np.ndarray, ...]]]</text>
<text text-anchor="start" x="1132.62" y="-2158.7" font-family="Times New Roman,serif" font-size="14.00">train(gradient_steps: int, batch_size: int): None</text>
</g>
<!-- stable_baselines3.dqn.dqn.DQN&#45;&gt;hex_rl.model_dqn.DQNModel -->
<g id="edge13" class="edge">
<title>stable_baselines3.dqn.dqn.DQN&#45;&gt;hex_rl.model_dqn.DQNModel</title>
<path fill="none" stroke="black" d="M1731.18,-2444.39C1742.63,-2533.48 1763.15,-2648.73 1799.12,-2746 1802.34,-2754.69 1805,-2755.98 1809.62,-2764 1824.39,-2789.57 1840.24,-2817.24 1854.98,-2843.05"/>
<polygon fill="black" stroke="black" points="1855.05,-2843.16 1861.5,-2846.39 1861,-2853.59 1854.55,-2850.36 1855.05,-2843.16"/>
<text text-anchor="middle" x="1816.88" y="-2732.7" font-family="Times New Roman,serif" font-size="14.00" fill="green">model</text>
</g>
<!-- stable_baselines3.dqn.dqn.DQN&#45;&gt;hex_rl.model_dqn.DQNModel -->
<g id="edge14" class="edge">
<title>stable_baselines3.dqn.dqn.DQN&#45;&gt;hex_rl.model_dqn.DQNModel</title>
<path fill="none" stroke="black" d="M1761.51,-2444.33C1798.08,-2565.34 1849.25,-2734.67 1881.66,-2841.93"/>
<polygon fill="black" stroke="black" points="1881.69,-2842.02 1887.26,-2846.6 1885.16,-2853.5 1879.6,-2848.92 1881.69,-2842.02"/>
<text text-anchor="middle" x="1866.88" y="-2732.7" font-family="Times New Roman,serif" font-size="14.00" fill="green">model</text>
</g>
<!-- stable_baselines3.dqn.dqn.DQN&#45;&gt;stable_baselines3.common.off_policy_algorithm.OffPolicyAlgorithm -->
<g id="edge6" class="edge">
<title>stable_baselines3.dqn.dqn.DQN&#45;&gt;stable_baselines3.common.off_policy_algorithm.OffPolicyAlgorithm</title>
<path fill="none" stroke="black" d="M1606,-2444.33C1535.36,-2536.23 1443.29,-2656.01 1366.97,-2755.29"/>
<polygon fill="none" stroke="black" points="1364.35,-2752.96 1361.03,-2763.02 1369.9,-2757.23 1364.35,-2752.96"/>
</g>
<!-- torch._dynamo.eval_frame.OptimizedModule -->
<g id="node23" class="node">
<title>torch._dynamo.eval_frame.OptimizedModule</title>
<polygon fill="#ffaabb" stroke="#ffaabb" points="353.5,-2894 353.5,-2996.75 623.75,-2996.75 623.75,-2894 353.5,-2894"/>
<text text-anchor="start" x="361.5" y="-2979.45" font-family="Times New Roman,serif" font-size="14.00">torch._dynamo.eval_frame.OptimizedModule</text>
<polyline fill="none" stroke="#ffaabb" points="353.5,-2973 623.75,-2973"/>
<text text-anchor="start" x="379.12" y="-2955.7" font-family="Times New Roman,serif" font-size="14.00">dynamo_ctx</text>
<text text-anchor="start" x="379.12" y="-2939.95" font-family="Times New Roman,serif" font-size="14.00">forward</text>
<text text-anchor="start" x="379.12" y="-2924.2" font-family="Times New Roman,serif" font-size="14.00">get_compiler_config : Callable[[], Any]</text>
<polyline fill="none" stroke="#ffaabb" points="353.5,-2917.75 623.75,-2917.75"/>
<text text-anchor="start" x="486.75" y="-2900.45" font-family="Times New Roman,serif" font-size="14.00"> </text>
</g>
<!-- torch._dynamo.eval_frame.OptimizedModule&#45;&gt;torch.nn.modules.module.Module -->
<g id="edge7" class="edge">
<title>torch._dynamo.eval_frame.OptimizedModule&#45;&gt;torch.nn.modules.module.Module</title>
<path fill="none" stroke="black" d="M494.09,-2893.86C498.34,-2853.79 504.23,-2796.35 508.62,-2746 509.27,-2738.6 509.91,-2731.13 510.56,-2723.61"/>
<polygon fill="none" stroke="black" points="514.04,-2723.93 511.4,-2713.67 507.07,-2723.33 514.04,-2723.93"/>
</g>
<!-- torch._dynamo.eval_frame.OptimizedModule&#45;&gt;torch.nn.modules.module.Module -->
<g id="edge15" class="edge">
<title>torch._dynamo.eval_frame.OptimizedModule&#45;&gt;torch.nn.modules.module.Module</title>
<path fill="none" stroke="black" d="M496.29,-2893.52C502.07,-2853.51 509.81,-2796.31 514.62,-2746 515.29,-2739.05 515.94,-2732.03 516.58,-2724.97"/>
<polygon fill="black" stroke="black" points="516.57,-2725.06 513.12,-2718.73 517.63,-2713.1 521.09,-2719.44 516.57,-2725.06"/>
<text text-anchor="middle" x="575.12" y="-2732.7" font-family="Times New Roman,serif" font-size="14.00" fill="green">_compiled_call_impl</text>
</g>
<!-- torch.nn.modules.container.Sequential -->
<g id="node24" class="node">
<title>torch.nn.modules.container.Sequential</title>
<polygon fill="#dddddd" stroke="#dddddd" points="559,-524.25 559,-634.75 832.25,-634.75 832.25,-524.25 559,-524.25"/>
<text text-anchor="start" x="589.12" y="-617.45" font-family="Times New Roman,serif" font-size="14.00">torch.nn.modules.container.Sequential</text>
<polyline fill="none" stroke="#dddddd" points="559,-611 832.25,-611"/>
<polyline fill="none" stroke="#dddddd" points="559,-611 832.25,-611"/>
<text text-anchor="start" x="567" y="-593.7" font-family="Times New Roman,serif" font-size="14.00">append(module: Module): &#39;Sequential&#39;</text>
<text text-anchor="start" x="567" y="-577.95" font-family="Times New Roman,serif" font-size="14.00">extend(sequential): &#39;Sequential&#39;</text>
<text text-anchor="start" x="567" y="-562.2" font-family="Times New Roman,serif" font-size="14.00">forward(input)</text>
<text text-anchor="start" x="567" y="-546.45" font-family="Times New Roman,serif" font-size="14.00">insert(index: int, module: Module): &#39;Sequential&#39;</text>
<text text-anchor="start" x="567" y="-530.7" font-family="Times New Roman,serif" font-size="14.00">pop(key: Union[int, slice]): Module</text>
</g>
<!-- torch.nn.modules.container.Sequential&#45;&gt;hex_rl.model_dqn.CustomCNN -->
<g id="edge16" class="edge">
<title>torch.nn.modules.container.Sequential&#45;&gt;hex_rl.model_dqn.CustomCNN</title>
<path fill="none" stroke="black" d="M691.4,-635.09C679.02,-794.93 642.99,-1260.09 631.32,-1410.78"/>
<polygon fill="black" stroke="black" points="631.33,-1410.69 634.85,-1416.98 630.4,-1422.65 626.88,-1416.36 631.33,-1410.69"/>
<text text-anchor="middle" x="659.75" y="-1179.45" font-family="Times New Roman,serif" font-size="14.00" fill="green">cnn</text>
</g>
<!-- torch.nn.modules.container.Sequential&#45;&gt;torch.nn.modules.module.Module -->
<g id="edge8" class="edge">
<title>torch.nn.modules.container.Sequential&#45;&gt;torch.nn.modules.module.Module</title>
<path fill="none" stroke="black" d="M706.05,-635.21C737.73,-811.13 825.32,-1377.27 734.62,-1832.25 731.93,-1845.77 728.83,-1859.4 725.39,-1873.06"/>
<polygon fill="none" stroke="black" points="722.05,-1872 722.94,-1882.55 728.83,-1873.75 722.05,-1872"/>
</g>
<!-- torch.nn.modules.module.Module&#45;&gt;stable_baselines3.common.off_policy_algorithm.OffPolicyAlgorithm -->
<g id="edge17" class="edge">
<title>torch.nn.modules.module.Module&#45;&gt;stable_baselines3.common.off_policy_algorithm.OffPolicyAlgorithm</title>
<path fill="none" stroke="black" d="M976.61,-2711.88C992.21,-2726.69 1007.53,-2741.22 1022.4,-2755.33"/>
<polygon fill="black" stroke="black" points="1022.25,-2755.19 1029.35,-2756.41 1030.95,-2763.45 1023.85,-2762.22 1022.25,-2755.19"/>
<text text-anchor="middle" x="1016.88" y="-2732.7" font-family="Times New Roman,serif" font-size="14.00" fill="green">actor</text>
</g>
<!-- torch.nn.modules.module.Module&#45;&gt;torch._dynamo.eval_frame.OptimizedModule -->
<g id="edge19" class="edge">
<title>torch.nn.modules.module.Module&#45;&gt;torch._dynamo.eval_frame.OptimizedModule</title>
<path fill="none" stroke="black" d="M439.81,-2712.2C440.25,-2723.57 441.09,-2734.85 442.38,-2746 447.65,-2791.87 459.57,-2842.55 469.99,-2881.2"/>
<polygon fill="none" stroke="black" points="469.97,-2881.12 475.42,-2885.85 473.15,-2892.69 467.7,-2887.97 469.97,-2881.12"/>
<text text-anchor="middle" x="473.75" y="-2732.7" font-family="Times New Roman,serif" font-size="14.00" fill="green">_orig_mod</text>
</g>
</g>
</svg>
